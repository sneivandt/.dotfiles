snippet #! "shebang node"
#!/usr/bin/env node
endsnippet

snippet class "class" b
function ${1:name}($2) {
	${VISUAL}$3
}$0
endsnippet

snippet proto "prototype" b
${1:class}.prototype.${2:method} = function($3) {
	${VISUAL}$4
};$0
endsnippet

snippet fun "function" b
function ${1:function_name}(${2}) {
	${VISUAL}$3
}$0
endsnippet

snippet iife "immediately invoked function expression"
(function($2) {
	${VISUAL}$3
})($1);$0
endsnippet

snippet if "if" b
if(${1:cond}) {
	${VISUAL}$2
}$0
endsnippet

snippet eif "else if" b
else if(${1:cond}) {
	${VISUAL}$2
}$0
endsnippet

snippet else "else" b
else {
	${VISUAL}$1
}$0
endsnippet

snippet for "for" b
for($1) {
	${VISUAL}$2
}$0
endsnippet

snippet .for "forEach" i
.forEach(function(${1:i}) {
	${VISUAL}$2
});$0
endsnippet

snippet while "while" b
while(${1:cond}) {
	${VISUAL}$2
}$0
endsnippet

snippet do "do while" b
do {
	${VISUAL}$1
}
while(${2:cond});$0
endsnippet

snippet try "try catch" b
try {
	${VISUAL}$1
}
catch(${2:e}) {
	$3
}$0
endsnippet

snippet desc "describe" b
describe('${1:feature}', function($2) {
	${VISUAL}$3
});
endsnippet

snippet it "it" b
it('should ${1:have behaviour}', function($2) {
	${VISUAL}$3
});$0
endsnippet

snippet con "console.log" b
console.log(${VISUAL}$1);$0
endsnippet
