""""""""""""""""""""""""""""""""""""""""
" Preamble

execute pathogen#infect()
let mapleader=","

""""""""""""""""""""""""""""""""""""""""
" Basic Options

set autoindent
set backspace=2
set cindent
set cmdheight=1
set copyindent
set encoding=utf-8
set expandtab
set fileformats=unix,dos,mac
set formatoptions=tcqr
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set lazyredraw
set list
set listchars=tab:▸\ ,trail:·
set mouse=a
set nobackup
set nocompatible
set noerrorbells
set nonumber
set noswapfile
set pastetoggle=<f2>
set preserveindent
set ruler
set scrolloff=5
set shiftwidth=2
set showmatch
set showmode
set smartcase
set smartindent
set softtabstop=2
set splitbelow
set splitright
set tabstop=2
set textwidth=80
set ttyfast
set viminfo=
set wildmenu
set wrap
set wrapscan

""""""""""""""""""""""""""""""""""""""""
" Color Scheme

syntax on
set t_Co=256
colorscheme jellybeans
highlight SpecialKey ctermbg=233

""""""""""""""""""""""""""""""""""""""""
" Auto Commands

au BufWritePre * :call <SID>StripTrailingWhitespaces()
au VimResized * :wincmd =
au FileType qf :wincmd J
au WinEnter * if winnr('$') == 1 && getbufvar(winbufnr(winnr()), "&buftype") == "quickfix"|q|endif

function! <SID>StripTrailingWhitespaces()
  let _s=@/
  let l = line(".")
  let c = col(".")
  %s/\s\+$//e
  let @/=_s
  call cursor(l, c)
endfunction

""""""""""""""""""""""""""""""""""""""""
" Filetypes

filetype indent plugin on
au Filetype c    setlocal sw=4 ts=4 sts=4
au Filetype cpp  setlocal sw=4 ts=4 sts=4
au Filetype java setlocal sw=4 ts=4 sts=4

""""""""""""""""""""""""""""""""""""""""
" Wildignore

set wildignore+=*.so,*.swp,*.zip,*.min.*,*.o*
set wildignore+=*/tmp/*,*/.git/*,*/.hg/*,*/.svn/*,*/node_modules/*,*/bower_components/*

""""""""""""""""""""""""""""""""""""""""
" GVIM

au GUIEnter * set visualbell t_vb=
set noerrorbells visualbell t_vb=
set guitablabel=%N\ %t\ %M
set guioptions-=mTrL

""""""""""""""""""""""""""""""""""""""""
" Airline

let g:airline_left_sep=""
let g:airline_left_alt_sep=""
let g:airline_right_sep=""
let g:airline_right_alt_sep=""

let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#show_buffers=0
let g:airline#extensions#tabline#tab_min_count=2
let g:airline#extensions#tabline#tab_nr_type=1
let g:airline#extensions#tabline#left_sep=""
let g:airline#extensions#tabline#left_alt_sep=""
let g:airline#extensions#tabline#right_sep=""
let g:airline#extensions#tabline#right_alt_sep=""
let g:airline#extensions#tabline#fnamemod=":t"

let g:airline#extensions#whitespace#enabled=0

let g:tmuxline_separators={"left": "", "left_alt": "", "right": "", "right_alt": "", "space": " "}

""""""""""""""""""""""""""""""""""""""""
" Ctrl-P

let g:ctrlp_map="<c-p>"
let g:ctrlp_cmd="CtrlP"
let g:ctrlp_switch_buffer="e"
let g:ctrlp_working_path_mode="ra"

""""""""""""""""""""""""""""""""""""""""
" Nerdtree

let NERDTreeMinimalUI=1
let NERDTreeRespectWildIgnore=1
map <silent><c-e> :NERDTreeToggle<cr>:wincmd =<cr>

""""""""""""""""""""""""""""""""""""""""
" Dispatch

cnoreabbrev <expr> make ((getcmdtype() == ':' && getcmdpos() <= 5) ? 'Make': 'make')

""""""""""""""""""""""""""""""""""""""""
" Tabular

map <silent><leader>a= :Tabularize /^[^=]*\zs=<cr>
map <silent><leader>a: :Tabularize /^[^:]*:\s*\zs\s/l0<cr>

""""""""""""""""""""""""""""""""""""""""
" Mappings

map <tab> %
map j gj
map k gk
nnoremap / /\v
nnoremap ? ?\v
nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap * *<C-o>

map <f3> :set spell! spelllang=en_us<cr>
map <c-r>n :tabnew<cr>
map <c-r><c-r> :tabnext<cr>
map <c-r>1 1gt
map <c-r>2 2gt
map <c-r>3 3gt
map <c-r>4 4gt
map <c-r>5 5gt
map <c-r>6 6gt
map <c-r>7 7gt
map <c-r>8 8gt
map <c-r>9 9gt

nmap <leader><space> :noh<cr>
nmap <leader>q :q<cr>
nmap <leader>g :vimgrep //j ** <bar> cw<left><left><left><left><left><left><left><left><left><left>
nmap <leader>r :%s/\<<c-r><c-w>\>//g<left><left>
